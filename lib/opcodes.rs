#![allow(dead_code)]
#![allow(non_upper_case_globals)]

macro_rules! add {
    ($name:ident = $value:expr) => {
        pub const $name: u8 = $value;
    };
}

// opcodes from https://docs.oracle.com/javase/specs/jvms/se17/html/jvms-6.html

add!(nop = 0x00);
add!(aconst_null = 0x01);
add!(iconst_m1 = 0x02);
add!(iconst_0 = 0x03);
add!(iconst_1 = 0x04);
add!(iconst_2 = 0x05);
add!(iconst_3 = 0x06);
add!(iconst_4 = 0x07);
add!(iconst_5 = 0x08);
add!(lconst_0 = 0x09);
add!(lconst_1 = 0x0a);
add!(fconst_0 = 0x0b);
add!(fconst_1 = 0x0c);
add!(fconst_2 = 0x0d);
add!(dconst_0 = 0x0e);
add!(dconst_1 = 0x0f);
add!(bipush = 0x10);
add!(sipush = 0x11);
add!(ldc = 0x12);
add!(ldc_w = 0x13);
add!(ldc2_w = 0x14);
add!(iload = 0x15);
add!(lload = 0x16);
add!(fload = 0x17);
add!(dload = 0x18);
add!(aload = 0x19);
add!(iload_0 = 0x1a);
add!(iload_1 = 0x1b);
add!(iload_2 = 0x1c);
add!(iload_3 = 0x1d);
add!(lload_0 = 0x1e);
add!(lload_1 = 0x1f);
add!(lload_2 = 0x20);
add!(lload_3 = 0x21);
add!(fload_0 = 0x22);
add!(fload_1 = 0x23);
add!(fload_2 = 0x24);
add!(fload_3 = 0x25);
add!(dload_0 = 0x26);
add!(dload_1 = 0x27);
add!(dload_2 = 0x28);
add!(dload_3 = 0x29);
add!(aload_0 = 0x2a);
add!(aload_1 = 0x2b);
add!(aload_2 = 0x2c);
add!(aload_3 = 0x2d);
add!(iaload = 0x2e);
add!(laload = 0x2f);
add!(faload = 0x30);
add!(daload = 0x31);
add!(aaload = 0x32);
add!(baload = 0x33);
add!(caload = 0x34);
add!(saload = 0x35);
add!(istore = 0x36);
add!(lstore = 0x37);
add!(fstore = 0x38);
add!(dstore = 0x39);
add!(astore = 0x3a);
add!(istore_0 = 0x3b);
add!(istore_1 = 0x3c);
add!(istore_2 = 0x3d);
add!(istore_3 = 0x3e);
add!(lstore_0 = 0x3f);
add!(lstore_1 = 0x40);
add!(lstore_2 = 0x41);
add!(lstore_3 = 0x42);
add!(fstore_0 = 0x43);
add!(fstore_1 = 0x44);
add!(fstore_2 = 0x45);
add!(fstore_3 = 0x46);
add!(dstore_0 = 0x47);
add!(dstore_1 = 0x48);
add!(dstore_2 = 0x49);
add!(dstore_3 = 0x4a);
add!(astore_0 = 0x4b);
add!(astore_1 = 0x4c);
add!(astore_2 = 0x4d);
add!(astore_3 = 0x4e);
add!(iastore = 0x4f);
add!(lastore = 0x50);
add!(fastore = 0x51);
add!(dastore = 0x52);
add!(aastore = 0x53);
add!(bastore = 0x54);
add!(castore = 0x55);
add!(sastore = 0x56);
add!(pop = 0x57);
add!(pop2 = 0x58);
add!(dup = 0x59);
add!(dup_x1 = 0x5a);
add!(dup_x2 = 0x5b);
add!(dup2 = 0x5c);
add!(dup2_x1 = 0x5d);
add!(dup2_x2 = 0x5e);
add!(swap = 0x5f);
add!(iadd = 0x60);
add!(ladd = 0x61);
add!(fadd = 0x62);
add!(dadd = 0x63);
add!(isub = 0x64);
add!(lsub = 0x65);
add!(fsub = 0x66);
add!(dsub = 0x67);
add!(imul = 0x68);
add!(lmul = 0x69);
add!(fmul = 0x6a);
add!(dmul = 0x6b);
add!(idiv = 0x6c);
add!(ldiv = 0x6d);
add!(fdiv = 0x6e);
add!(ddiv = 0x6f);
add!(irem = 0x70);
add!(lrem = 0x71);
add!(frem = 0x72);
add!(drem = 0x73);
add!(ineg = 0x74);
add!(lneg = 0x75);
add!(fneg = 0x76);
add!(dneg = 0x77);
add!(ishl = 0x78);
add!(lshl = 0x79);
add!(ishr = 0x7a);
add!(lshr = 0x7b);
add!(iushr = 0x7c);
add!(lushr = 0x7d);
add!(iand = 0x7e);
add!(land = 0x7f);
add!(ior = 0x80);
add!(lor = 0x81);
add!(ixor = 0x82);
add!(lxor = 0x83);
add!(iinc = 0x84);
add!(i2l = 0x85);
add!(i2f = 0x86);
add!(i2d = 0x87);
add!(l2i = 0x88);
add!(l2f = 0x89);
add!(l2d = 0x8a);
add!(f2i = 0x8b);
add!(f2l = 0x8c);
add!(f2d = 0x8d);
add!(d2i = 0x8e);
add!(d2l = 0x8f);
add!(d2f = 0x90);
add!(i2b = 0x91);
add!(i2c = 0x92);
add!(i2s = 0x93);
add!(lcmp = 0x94);
add!(fcmpl = 0x95);
add!(fcmpg = 0x96);
add!(dcmpl = 0x97);
add!(dcmpg = 0x98);
add!(ifeq = 0x99);
add!(ifne = 0x9a);
add!(iflt = 0x9b);
add!(ifge = 0x9c);
add!(ifgt = 0x9d);
add!(ifle = 0x9e);
add!(if_icmpeq = 0x9f);
add!(if_icmpne = 0xa0);
add!(if_icmplt = 0xa1);
add!(if_icmpge = 0xa2);
add!(if_icmpgt = 0xa3);
add!(if_icmple = 0xa4);
add!(if_acmpeq = 0xa5);
add!(if_acmpne = 0xa6);
add!(goto = 0xa7);
add!(jsr = 0xa8);
add!(ret = 0xa9);
add!(tableswitch = 0xaa);
add!(lookupswitch = 0xab);
add!(ireturn = 0xac);
add!(lreturn = 0xad);
add!(freturn = 0xae);
add!(dreturn = 0xaf);
add!(invokevirtual = 0xb6);
add!(invokespecial = 0xb7);
add!(invokestatic = 0xb8);
add!(invokeinterface = 0xb9);
add!(invokedynamic = 0xba);
add!(areturn = 0xb0);
add!(_return = 0xb1);
add!(getstatic = 0xb2);
add!(putstatic = 0xb3);
add!(getfield = 0xb4);
add!(putfield = 0xb5);
add!(new = 0xbb);
add!(newarray = 0xbc);
add!(anewarray = 0xbd);
add!(arraylength = 0xbe);
add!(athrow = 0xbf);
add!(checkcast = 0xc0);
add!(instanceof = 0xc1);
add!(monitorenter = 0xc2);
add!(monitorexit = 0xc3);
add!(wide = 0xc4);
add!(multianewarray = 0xc5);
add!(ifnull = 0xc6);
add!(ifnonnull = 0xc7);
add!(goto_w = 0xc8);
add!(jsr_w = 0xc9);

add!(breakpoint = 0xca);
add!(impdep1 = 0xfe);
add!(impdep2 = 0xff);

#[repr(u8)]
#[derive(Debug, Clone)]
pub enum Opcodes {
    Nop = 0x00,
    AconstNull = 0x01,
    IconstM1 = 0x02,
    Iconst0 = 0x03,
    Iconst1 = 0x04,
    Iconst2 = 0x05,
    Iconst3 = 0x06,
    Iconst4 = 0x07,
    Iconst5 = 0x08,
    Lconst0 = 0x09,
    Lconst1 = 0x0a,
    Fconst0 = 0x0b,
    Fconst1 = 0x0c,
    Fconst2 = 0x0d,
    Dconst0 = 0x0e,
    Dconst1 = 0x0f,
    Bipush = 0x10,
    Sipush = 0x11,
    Ldc = 0x12,
    LdcW = 0x13,
    Ldc2W = 0x14,
    Iload = 0x15,
    Lload = 0x16,
    Fload = 0x17,
    Dload = 0x18,
    Aload = 0x19,
    Iload0 = 0x1a,
    Iload1 = 0x1b,
    Iload2 = 0x1c,
    Iload3 = 0x1d,
    Lload0 = 0x1e,
    Lload1 = 0x1f,
    Lload2 = 0x20,
    Lload3 = 0x21,
    Fload0 = 0x22,
    Fload1 = 0x23,
    Fload2 = 0x24,
    Fload3 = 0x25,
    Dload0 = 0x26,
    Dload1 = 0x27,
    Dload2 = 0x28,
    Dload3 = 0x29,
    Aload0 = 0x2a,
    Aload1 = 0x2b,
    Aload2 = 0x2c,
    Aload3 = 0x2d,
    Iaload = 0x2e,
    Laload = 0x2f,
    Faload = 0x30,
    Daload = 0x31,
    Aaload = 0x32,
    Baload = 0x33,
    Caload = 0x34,
    Saload = 0x35,
    Istore = 0x36,
    Lstore = 0x37,
    Fstore = 0x38,
    Dstore = 0x39,
    Astore = 0x3a,
    Istore0 = 0x3b,
    Istore1 = 0x3c,
    Istore2 = 0x3d,
    Istore3 = 0x3e,
    Lstore0 = 0x3f,
    Lstore1 = 0x40,
    Lstore2 = 0x41,
    Lstore3 = 0x42,
    Fstore0 = 0x43,
    Fstore1 = 0x44,
    Fstore2 = 0x45,
    Fstore3 = 0x46,
    Dstore0 = 0x47,
    Dstore1 = 0x48,
    Dstore2 = 0x49,
    Dstore3 = 0x4a,
    Astore0 = 0x4b,
    Astore1 = 0x4c,
    Astore2 = 0x4d,
    Astore3 = 0x4e,
    Iastore = 0x4f,
    Lastore = 0x50,
    Fastore = 0x51,
    Dastore = 0x52,
    Aastore = 0x53,
    Bastore = 0x54,
    Castore = 0x55,
    Sastore = 0x56,
    Pop = 0x57,
    Pop2 = 0x58,
    Dup = 0x59,
    DupX1 = 0x5a,
    DupX2 = 0x5b,
    Dup2 = 0x5c,
    Dup2X1 = 0x5d,
    Dup2X2 = 0x5e,
    Swap = 0x5f,
    Iadd = 0x60,
    Ladd = 0x61,
    Fadd = 0x62,
    Dadd = 0x63,
    Isub = 0x64,
    Lsub = 0x65,
    Fsub = 0x66,
    Dsub = 0x67,
    Imul = 0x68,
    Lmul = 0x69,
    Fmul = 0x6a,
    Dmul = 0x6b,
    Idiv = 0x6c,
    Ldiv = 0x6d,
    Fdiv = 0x6e,
    Ddiv = 0x6f,
    Irem = 0x70,
    Lrem = 0x71,
    Frem = 0x72,
    Drem = 0x73,
    Ineg = 0x74,
    Lneg = 0x75,
    Fneg = 0x76,
    Dneg = 0x77,
    Ishl = 0x78,
    Lshl = 0x79,
    Ishr = 0x7a,
    Lshr = 0x7b,
    Iushr = 0x7c,
    Lushr = 0x7d,
    Iand = 0x7e,
    Land = 0x7f,
    Ior = 0x80,
    Lor = 0x81,
    Ixor = 0x82,
    Lxor = 0x83,
    Iinc = 0x84,
    I2l = 0x85,
    I2f = 0x86,
    I2d = 0x87,
    L2i = 0x88,
    L2f = 0x89,
    L2d = 0x8a,
    F2i = 0x8b,
    F2l = 0x8c,
    F2d = 0x8d,
    D2i = 0x8e,
    D2l = 0x8f,
    D2f = 0x90,
    I2b = 0x91,
    I2c = 0x92,
    I2s = 0x93,
    Lcmp = 0x94,
    Fcmpl = 0x95,
    Fcmpg = 0x96,
    Dcmpl = 0x97,
    Dcmpg = 0x98,
    Ifeq = 0x99,
    Ifne = 0x9a,
    Iflt = 0x9b,
    Ifge = 0x9c,
    Ifgt = 0x9d,
    Ifle = 0x9e,
    IfIcmpeq = 0x9f,
    IfIcmpne = 0xa0,
    IfIcmplt = 0xa1,
    IfIcmpge = 0xa2,
    IfIcmpgt = 0xa3,
    IfIcmple = 0xa4,
    IfAcmpeq = 0xa5,
    IfAcmpne = 0xa6,
    Goto = 0xa7,
    Jsr = 0xa8,
    Ret = 0xa9,
    Tableswitch = 0xaa,
    Lookupswitch = 0xab,
    Ireturn = 0xac,
    Lreturn = 0xad,
    Freturn = 0xae,
    Dreturn = 0xaf,
    Invokevirtual = 0xb6,
    Invokespecial = 0xb7,
    Invokestatic = 0xb8,
    Invokeinterface = 0xb9,
    Invokedynamic = 0xba,
    Areturn = 0xb0,
    Return = 0xb1,
    Getstatic = 0xb2,
    Putstatic = 0xb3,
    Getfield = 0xb4,
    Putfield = 0xb5,
    New = 0xbb,
    Newarray = 0xbc,
    Anewarray = 0xbd,
    Arraylength = 0xbe,
    Athrow = 0xbf,
    Checkcast = 0xc0,
    Instanceof = 0xc1,
    Monitorenter = 0xc2,
    Monitorexit = 0xc3,
    Wide = 0xc4,
    Multianewarray = 0xc5,
    Ifnull = 0xc6,
    Ifnonnull = 0xc7,
    GotoW = 0xc8,
    JsrW = 0xc9,

    Breakpoint = 0xca,
    Impdep1 = 0xfe,
    Impdep2 = 0xff,
}

impl From<u8> for Opcodes {
    fn from(value: u8) -> Self {
        unsafe { std::mem::transmute(value) }
    }
}
